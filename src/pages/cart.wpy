<template>
  <view class="cart">
    <view class="shop-name">
      <text class="iconfont icon-dianpu"></text>
      <text class="name">优购生活馆</text>
    </view>

    <view class="goods-list">
      <view class="goods-item" wx:for="{{cart}}" wx:key="{{goods_id}}">
        <view class="icon" @tap="toggleState({{item.goods_id}})">
          <icon type="success" color="red" size="16" wx:if="{{item.isChecked}}"></icon>
          <icon type="circle" color="rgb(208,206,205)" size="16" wx:elif></icon>
        </view>
        <navigator url="../pages/goods_detail?goods_id=${item.goods_id}" class="img">
          <image src="{{item.goods_small_logo}}"></image>
        </navigator>
        <view class="info">
          <view class="title">{{item.goods_name}}</view>
          <view class="tab">
            <view class="price">￥{{item.goods_price}}.00</view>
            <view class="count">
            <text @tap="changeCount({{item.goods_id}},{{-1}})" class="{{item.goods_num === 1 ? 'disabled' : ''}}">-</text>
              <input value="{{item.goods_num}}"></input>
              <text @tap="changeCount({{item.goods_id}},{{1}})">+</text>
            </view>
          </view>
        </view>
      </view>   
    </view>

    <view class="footer">
      <view class="toggleAll" @tap="changeToggleAll">
        <icon type="success" color="red" size="16" wx:if="{{isCheckedAll}}"></icon>
        <icon type="circle" color="rgb(208,206,205)" size="16" wx:elif></icon>
        <text>全选</text>
      </view>
      <view class="total">
        <view>
          <text>合计：</text>
          <text class="money">￥{{totalMoney}}.00</text>
        </view>
        <view class="free">包含运费</view>
      </view>
      <view class="btn">结算({{total}})</view>
    </view>
  </view>
</template>

<script>
import wepy from 'wepy'

// ES6中 类  react一样： 类组件
export default class Cart extends wepy.page {
  config = {
    navigationBarTitleText: '购物车'
  }
  onShow() {
    console.log('onLoad')
    this.getCart()
  }
  data = {
    cart: []
  }
  methods = {
    toggleState(id) {
      let goods = this.cart.find(item => item.goods_id === id)
      goods.isChecked = !goods.isChecked
    },
    changeToggleAll() {
      this.cart.forEach(item => (item.isChecked = !this.isCheckedAll))
    },
    async changeCount(id, count) {
      let goods = this.cart.find(item => item.goods_id === id)
      if ((goods.goods_num === 1) & (count === -1)) {
        let res = await wepy.showModal({
          title: '温馨提示',
          content: '你确定要删除这件商品吗',
          confirmColor: '#080'
        })
        if (res.confirm) {
          let idx = this.cart.findIndex(item => item.goods_id === id)
          console.log(idx)
          this.cart.splice(idx, 1)
          this.$apply()
        }
      } else {
        goods.goods_num += count
      }
    }
  }
  computed = {
    isCheckedAll() {
      return this.cart.every(item => item.isChecked)
    },
    total() {
      return this.cart
        .filter(item => item.isChecked)
        .reduce((total, item) => total + item.goods_num, 0)
    },
    totalMoney() {
      return this.cart
        .filter(item => item.isChecked)
        .reduce((total, item) => total + item.goods_num * item.goods_price, 0)
    }
  }
  watch = {
    cart(newValue) {
      wepy.setStorageSync('cart', newValue)
    }
  }
  getCart() {
    this.cart = wepy.getStorageSync('cart') || []
  }
}
</script>

<style lang="less">
@import '../assets/wxss/icon-font.wxss';
.shop-name {
  padding: 20rpx;
  width: 750rpx;
  height: 100rpx;
  border-bottom: 1rpx solid #ccc;
  font-size: 32rpx;
  box-sizing: border-box;
  line-height: 60rpx;

  .iconfont {
    font-size: 32rpx;
    color: #aaaaaa;
  }
  .name {
    margin-left: 10rpx;
  }
}
.goods-item {
  padding: 20rpx;
  box-sizing: border-box;
  height: 240rpx;
  display: flex;
  align-items: center;
  border-bottom: 1rpx solid #ccc;

  .icon {
    flex: 1;
    display: flex;
    justify-content: center;
  }

  .img {
    flex: 3;
    display: flex;
    justify-content: center;
    image {
      width: 160rpx;
      height: 160rpx;
    }
  }

  .info {
    flex: 8;
    margin-left: 20rpx;
    .title {
      font-size: 28rpx;
      overflow: hidden;
      text-overflow: ellipsis;
      display: -webkit-box;
      -webkit-box-orient: vertical;
      -webkit-line-clamp: 2;
    }

    .tab {
      display: flex;
      margin-top: 60rpx;
      font-size: 32rpx;
      justify-content: space-between;

      .price {
        color: #ff2d4a;
      }
    }
    .count {
      display: flex;
      width: 180rpx;
      text-align: center;
      line-height: 40rpx;

      .disabled {
        border: 1px solid #ccc;
      }

      text {
        width: 40rpx;
        height: 40rpx;
        border: 1rpx solid #666666;
      }

      input {
        width: 60rpx;
        height: 40rpx;
        line-height: 40rpx;
      }
    }
  }
}
.footer {
  width: 750rpx;
  height: 100rpx;
  display: flex;
  font-size: 30rpx;
  position: fixed;
  bottom: 0;

  .toggleAll {
    flex: 3;
    padding-left: 36rpx;
    line-height: 100rpx;
    text {
      margin-top: 20rpx;
      margin-left: 20rpx;
    }
  }

  .total {
    flex: 5;
    margin-left: 30rpx;
    line-height: 50rpx;

    .money {
      color: #ff2d51;
      font-size: 32rpx;
    }

    .free {
      color: #a2a3a6;
    }
  }

  .btn {
    flex: 4;
    background-color: #ff2d4a;
    color: #fff;
    text-align: center;
    line-height: 100rpx;
    font-size: 32rpx;
  }
}
</style>
